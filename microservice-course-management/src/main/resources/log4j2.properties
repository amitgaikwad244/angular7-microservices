#log4j2 internal logging level
status = error

#where to print log4j2 internal errors
#"err" for stderr, "out" for stdout
dest = err

#The name of the configuration
name = MdrTemplateConfig

#The minimum amount of time, in seconds, that must elapse before the file configuration is checked for changes.
monitorInterval = 30

#properties that can be used further in the config file
property.appName = Courseservice
property.logFolderPath = ${sys:user.home}/MdrTemplateResources/logs
property.filePattern = %d{dd-MMM-yyyy HH:mm:ss.SSS} %-5level ${sys:PID} --- [%X{traceId}/%X{spanId}] [%15.15t] %-40.40c{1.} : %m%n
#property.filePattern = %d{dd-MMM-yyyy HH:mm:ss.SSS} %-5level ${sys:PID} -- [%X{traceId}/%X{spanId}] -- %d %d{Z} -- %t %c - %m%n
property.consolePattern = %clr{%d{dd-MMM-yyyy HH:mm:ss.SSS}}{faint} %clr{%-5level} %clr{${sys:PID}}{magenta} %clr{---}{faint} %clr{[%15.15t]}{faint} %clr{%-40.40c{1.}}{cyan} %clr{:}{faint} %m%n
property.exceptionPattern = %msg%n

#Console Appender
appender.console.type = Console
appender.console.name = STDOUT
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${consolePattern}
request.logging.shouldLog=true

#Exception File Appender
appender.exception.type = RollingFile
appender.exception.name = exceptionFileAppender
appender.exception.fileName = ${logFolderPath}/exceptionLogs/exceptionDefault.log
appender.exception.filePattern = ${logFolderPath}/exceptionLogs/$${ctx:logFileName}.log
appender.exception.layout.type = PatternLayout
appender.exception.layout.pattern = ${exceptionPattern}
appender.exception.policies.type = Policies
appender.exception.policies.size.type = SizeBasedTriggeringPolicy
appender.exception.policies.size.size=10MB
appender.exception.strategy.type = DefaultRolloverStrategy
appender.exception.strategy.max = 100

#App Log Appender
appender.file.type = RollingFile
appender.file.name = appLogAppender
appender.file.fileName = ${logFolderPath}/${appName}.log
appender.file.filePattern = ${logFolderPath}/${appName}-%d{dd-MMM-yyyy}-%i.zip
appender.file.layout.type = PatternLayout
appender.file.layout.pattern = ${filePattern}
appender.file.policies.type = Policies
appender.file.policies.time.type = TimeBasedTriggeringPolicy
appender.file.policies.time.interval = 1
appender.file.policies.time.modulate = true
appender.file.policies.size.type = SizeBasedTriggeringPolicy
appender.file.policies.size.size=50MB
appender.file.strategy.type = DefaultRolloverStrategy
appender.file.strategy.max = 30

logger.exception.name = microservices.microservicecoursemanagement.common.logs.CustomLogger
logger.exception.level = error
logger.exception.additivity = false
logger.exception.appenderRef.exception.ref = exceptionFileAppender

rootLogger.level = info
rootLogger.appenderRef.stdout.ref = STDOUT
rootLogger.appenderRef.file.ref = appLogAppender

#For displaying internal application logs
logger.springApp1.name = demo.microservices.microservicecoursemanagement
logger.springApp1.level = info
logger.springApp1.additivity = false
logger.springApp1.appenderRef.console.ref = STDOUT
logger.springApp1.appenderRef.file.ref = appLogAppender

#logger.springApp2.name = org.springframework.web
#logger.springApp2.level = debug
#logger.springApp2.additivity = false
#logger.springApp2.appenderRef.console.ref = STDOUT
#logger.springApp2.appenderRef.file.ref = appLogAppender

#For displaying query parameters when executing query using hibernate
#logger.springApp3.name = org.hibernate.type.descriptor.sql.BasicBinder
#logger.springApp3.level = trace
#logger.springApp3.additivity = false
#logger.springApp3.appenderRef.console.ref = STDOUT
#logger.springApp3.appenderRef.file.ref = appLogAppender